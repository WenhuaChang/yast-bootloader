/**
 * File:
 *	BootS390.ycp
 *
 * Module:
 *	BootS390
 *
 * Summary:
 *	functions for aboot setup
 *
 * Authors:
 *	Klaus Kaempf <kkaempf@suse.de>
 *
 * $Id$
 *
 */
{
    module "BootS390";

    import "Boot";
    import "Installation";
    import "StorageControllers";

    textdomain "bootloader";

    /**
     * Write()
     *
     */

    global define boolean Write ()
    ``{
        Boot::Set();
	y2milestone( "install.inf dir:%1", SCR::Dir(.etc.install_inf));

	string root_device	= Boot::RootPartitionDevice;

	string zipl_conf = "# Generated by YaST2
[defaultboot]
default=ipl

[ipl]
target=/boot/zipl
image=/boot/kernel/image
ramdisk=/boot/initrd
parameters=\"" + StorageControllers::dasdParam + " root=" + root_device;

	zipl_conf = zipl_conf + "\"

[dumpdasd]
target=/boot/zipl
dumpto=/dev/dasd??

[dumptape]
target=/boot/zipl
dumpto=/dev/rtibm0
";

	SCR::Write (.target.string, "/etc/zipl.conf", zipl_conf);

	SCR::Execute (.target.bash, "/sbin/mk_initrd");

	// append chandev to /etc/chandev.conf
	string chandev = SCR::Read(.etc.install_inf.Chandev);
	if( chandev == nil )
	    {
	    chandev = "";
	    }
	if (chandev != "")
	{
	    SCR::Execute (.target.bash, "/bin/echo '"+chandev+"' >> /etc/chandev.conf");
	}
	integer zipl = SCR::Execute (.target.bash, "/sbin/zipl > /var/log/inst-log.zipl 2>&1");
	if (0 != zipl)
	{
	    string output = SCR::Read (.target.string, "/var/log/inst-log.zipl");
	    UI::OpenDialog ( `VBox (
		// label
		`Label (`id (`l1), sformat(_("/sbin/zipl returned exit code %1"), zipl)),
		`VSpacing (1),
		// label, ruchtext headline
		`Label (`id (`l2), _("Log contents:")),
		`RichText (`id (`out),  `opt(`plainText), output),
		`VSpacing (1),
		// pushbutton
		`PushButton (`id (`ok), _("&Continue"))
	    ));
	    UI::UserInput ();
	    UI::CloseDialog ();
	    return false;
	}
	return true;
    }
}
