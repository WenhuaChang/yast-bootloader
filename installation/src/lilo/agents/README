Note: you'll find a complete docu at the top of each script. This README
just gives a general overview.



dolilo
======

Wrapper script for the mk_* scripts that does a complete boot config.



mk_initrd
=========

Creates suitable initrds for the installed system. Example:

  mk_initrd /blub

It assumes the kernel images to be /blub/boot/vmlinuz{,.suse} and creates
/blub/boot/initrd{,.suse}. The initrds are only created if modules have to
be loaded at boot time. The module list is taken from the INITRD_MODULES
entry in /blub/etc/rc.config (e.g. INITRD_MODULES="aic7xxx tulip").

Module parameters are taken from 'options' lines out of /etc/modules.conf.

NOTE that this implies that old initrds are deleted if they are not needed.

The script automatically determines the version of the kernel and locates
the appropriate modules in /blub/lib/modules.

The initrd size can be changed by editing the mk_initrd script.

On any error the script returns an exit code > 0.



mk_lilo_conf
============

Creates an initial lilo configuration. Usage expample:

  mk_lilo_conf /blub -o "/dev/hda1 dos" -o "/dev/hda2 win /dev/hda"

It looks for the kernel images /blub/boot/vmlinuz{,.suse} and the initrds
/blub/boot/initrd{,.suse}. In addition, you *must* have mounted a /boot
partition to /blub/boot.

Other arguments (the location of the MBR, FB support, ...) must be supplied
by changing some variables at the head of the script.

If you specify /dev/fd0 as MBR, a boot floppy is created. If the boot files
exceed the 1023 cylinder limit, the kernel and initrd are actually *copied*
onto the floppy.



mk_boot_floppy
==============

Creates a boot floppy image (<root_dir>/boot/floppy) for booting the
installed system.

  mk_boot_floppy /blub

It assumes the kernel image to be /blub/boot/vmlinuz and the initrd to be
/blub/boot/initrd.

On any error the script returns an exit code > 0.

