/**
 * File:
 *      modules/BootMILO.ycp
 *
 * Module:
 *      Bootloader installation and configuration
 *
 * Summary:
 *      Module containing specific functions for MILO configuration
 *      and installation
 *
 * Authors:
 *      Jiri Srain <jsrain@suse.cz>
 *      Klaus Kaempf <kkaempf@suse.de>
 *
 * $Id$
 *
 */

{
    module "BootMILO";

    textdomain "bootloader";

    import "Kernel";
    import "Storage";
    import "Product";
    import "StorageControllers";
    import "BootCommon";

    include "bootloader/routines/popups.ycp";

// general functions

    /**
      * Return map of provided functions
      * @return map map of functions (eg. $["write":``(BootLILO::Write ())])
      */
    global define map GetFunctions () ``{
	return $[
	    "read" :	``(BootMILO::Read ()),
	    "propose" : ``(BootMILO::Propose ()),
	    "save" :	``(BootMILO::Save ()),
	    "summary" :	``(BootMILO::Summary ()),
	    "update" :	``(BootMILO::Update ()),
	    "write" :	``(BootMILO::Write ()),
	    "sequence" :``(BootMILO::FixSequence ()),
	];
    }
    /**
      * Propose bootloader settings
      */
    global define void Propose () ``{
	BootCommon::DetectDisks ();
    }

    /**
      * Read settings from disk
      * @return boolean true on success
      */
    global define boolean Read () ``{
	BootCommon::DetectDisks ();
    }

    global define boolean Save () ``{
	return true;
    }

    global define list(string) Summary () ``{
	return [_("Install MILO bootloader")];
    }

    /**
      * Update read settings to new version of configuration files
      */
    global define void Update () ``{
    }

    /**
      * Write bootloader settings to disk
      * @return boolean true on success
      */
    global define boolean Write () ``{
        string docmd = "/usr/lib/YaST2/bin/do"
	    + BootCommon::getLoaderType (false) + " /";

        // prepare /tmp/boot.conf
        byteblock milo_buffer = WFM::Read(.local.byte, Installation::sourcedir+ "/milo/boot.conf");
        SCR::Write(.target.byte, "/tmp/boot.conf", milo_buffer);
        // install milo in /boot
        SCR::Execute (.target.bash, docmd);
        // remove /tmp/boot.conf
        SCR::Execute (.target.remove, "/tmp/boot.conf");

        return true;
    }

    /**
      * Update bootlaoder configuration sequence
      * @param ws_data map of wizard sequencer data
      * @return map modified map of wizard sequencer data
      */
    global define map FixSequence (map ws_data) ``{
        map aliases = $[
	    "summary" : ``(BootMILO::runSummaryDialog ()),
        ];
        ws_data["aliases"] = aliases;
        return ws_data;
    }



// end of mandatory functions
//----------------------------------------------------------------------------

    /**
      * Empty summary dialog
      * @return symbol always `back
      */
    global define symbol runSummaryDialog () ``{
	displayNoSupportPopup ();
	return `back;
    }
}
