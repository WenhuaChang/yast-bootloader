/**
 * File:
 *      include/bootloader/ppc/ppc_widgets.ycp
 *
 * Module:
 *      Bootloader installation and configuration
 *
 * Summary:
 *      Widgets for being used by bootloader for PowerPC
 *
 * Authors:
 *      Joachim Plack <jplack@suse.de>
 *
 * $Id$
 *
 */


{
textdomain "bootloader";

include "bootloader/generic/widget_funcs.ycp";

void _globals_store_data( string key, string value ) {
    if (value != nil && value != "")
	BootCommon::globals[key] = value;
    else {
	BootCommon::globals = filter(string k, string v,
	    BootCommon::globals, ``(key != k)
	);
    }
} 


include "bootloader/ppc/ppc_global_options_widget.ycp";
include "bootloader/ppc/ppc_boot_loader_locations_widget.ycp";
include "bootloader/ppc/ppc_section_type_widget.ycp";
include "bootloader/ppc/ppc_section_edit_widgets.ycp";
include "bootloader/ppc/ppc_sections_widget.ycp";


/**
 * Cache for ppcWidgets function
 */
map<string,map<string,any> > _ppc_widgets = nil;

/**
 * Get widgets specific for ppc
 * @return a map describing all ppc-specific widgets
 */
global map<string,map<string,any> > ppcWidgets () {
    if (_ppc_widgets == nil)
    {
	_ppc_widgets = $[
	    "boot_loader_options" : PpcGlobalOptionWidget (),
	    "loader_location"	  : PpcLoaderLocationWidget (),
	    "section_type"	  : PpcSectionTypeWidget(),
	    "sections"		  : PpcSectionsWidget(),
	];

	foreach(string type, section_types(), {
	    _ppc_widgets = add(_ppc_widgets, "section_edit_" + type,
		 PpcSectionEditWidget(type));
	});

    }
    return _ppc_widgets;
}


} // include end
