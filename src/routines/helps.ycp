/**
 * File:
 *      include/bootloader/routines/helps.ycp
 *
 * Module:
 *      Bootloader installation and configuration
 *
 * Summary:
 *      Help strings for bootloader installation and configuration
 *
 * Authors:
 *      Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 *
 */


{
    textdomain "bootloader";


// wizard sequecer widgets helps

    /**
      * Get help
      * @return string help text
      */
    global define string getInitProgressHelp() ``{
	// help text 1/1 (shown during settings reading progress)
	return _("<P><BIG><B>Bootloader configuration tool</B></BIG><BR>
Change the settings of your bootloader. </P>");
    }

    /**
      * Get help
      * @return string help text
      */
    global define string getSaveProgressHelp () ``{
	return "Write help";
    }

    /**
      * Get help
      * @return string help text
      */
    global define string getSummaryButtonsHelp () ``{
	string ins = "";
	if (BootCommon::getLoaderType (false) == "grub")
	    // help text, optional part of following
	    ins = _("If you have multiple Linux system installed,
YaST can try to find them and merge their menus.");
	// help text 1/2 (%1 may be following sentence, optionally empty)
	string help = sformat (_("<P>Via the <B>Reset</B> button
you can clear current 
configuration and propose new configration, start from scratch, reread
configuration saved on your disk. %1</P>"), ins);
	// help text 2/2
	help = help + _("<P>To edit bootloader configuration files
manually, push <B>Edit configuration files</B> button</P>");
	return help;
    }

    /**
      * Get help
      * @return string help text
      */
    global define string getSingleSectionHelp () ``{
        // help text 1/3
        string help = _("<P>To edit settings of current section choose
appropriate entry of the table, and push the <B>Edit</B> button.
To add new option use <B>Add</B> button, to remove
optoin push the <B>Delete</B> button.</P>");
	// help text 2/3
	help = help + _("<P>The<B> Ch.</B> column of the table is meant for
detecting whether option was changed</P>");
	if (BootCommon::getLoaderType (false) == "grub")
            // help text 3/3, optional
            help = help + _("<p> To reorder options use the <B>Up</B> and 
<B>Down</B> buttons.</P>");

        return help;

    }

    /**
      * Get help
      * @return string help text
      */
    global define string getSectionsHelp () ``{
	// help 1/4
	return _("<P> In the table, each section represents one item
in the boot menu.</P>") +
	// help 2/4
	_("<P> Press <B>Edit</B> to display the properties of the
selected section.</P>") +
	// help 3/4
	_("<P> By pressing <b>Set as default</b>, mark the selected 
section as default. When booting, the boot loader will provide 
a boot menu and wait for the user to select the kernel or other 
OS to boot. If no key is pressed before the time out, the default 
kernel or OS will be booted. The order of sections in the bootloader
menu can be changed using the <B>Up</B> and <B>Down</B> buttons.</P>") +
	// help 4/4
	_("<P>Press <B>Add</B> to create a new boot loader section
or <B>Delete</B> to delete selected section.</P>");
    }

    /**
      * Get help
      * @return string help text
      */
    global define string getGlobalSectionHelp () ``{
	// help text 1/3
	string help = _("<P>To edit bootloader settings choose appropriate
entry of the table, and push the <B>Edit</B> button.
To add new option use <B>Add</B> button, to remove
optoin push the <B>Delete</B> button.</P>");
	// help text 2/3
	help = help + _("<P>To edit sections settings, choose
<B>Available sections</B> or <B>Default section</B> and edit them.</P>");
	// help text 3/3
	help = help + _("<P>The<B> Ch.</B> column of the table is meant for
detecting whether option was changed</P>");
	return help;
    }


// popup widgets helps

    /**
      * Get help
      * @return string help text
      */
    global define string getLocationsHelp () ``{
	// help text for the custom boot manager installation, 1 of 7
	// %1 = name of boot loader (e.g. "LILO")
	// this should be per architecture
	string helptext = sformat (_("<p>
The boot manager (%1) can be installed in the following ways:
</p>
"), BootCommon::getLoaderType (false));

	// custom bootloader help text, 2 of 7
	helptext = helptext + _("<p>
- In the <b>MBR</b> (the Master Boot Record).  This is recommended whenever SuSE Linux
determines the system can be booted this way.
</p>
");

	// custom bootloader help text, 3 of 7
	helptext = helptext + _("<p>
- In the <b>/boot</b> or <B>/</B> (root) partition.  Choose this option if you
have several operating systems installed on your hard drive and want to
continue using your old boot manager, such as <tt>loadlin</tt>. 
Code currently being in your MBR stays unchanged.<br>
Configure your <b>other boot manager</b> to start SuSE Linux.
</p>
");

       if (StorageDevices::FloppyPresent)
        {
            // custom bootloader help text, 4 of 7
            // this part will only be shown if a floppy drive is attached.
            helptext = helptext + _("<p>
- On a <b>floppy</b> disk.
Use this to avoid the risk of interference with an already existing
boot mechanism. Enable booting from floppy disk in
the BIOS of your machine to use this option.
</p>
");
        }

	// custom bootloader help text, 5 of 7
	helptext = helptext + _("<p>
- In some <b>other</b> partition. Consider your system's restrictions
when selecting this option.</p>
");
	if (Arch::i386)
	{
	    // optional part, only inserted on x86 architectures. 6 of 7
	    helptext = helptext + _("<p>For example, most PCs have a BIOS
limit that restricts booting to
hard disk cylinders smaller than 1024. Depending on the boot manager used,
you may or may not be able to boot from a logical partition.
</p>");
	}

	// custom bootloader help text, 7 of 7
	helptext = helptext + _("<p>
Enter the device name of the partition (e.g., <tt>/dev/hda3</tt>,
<tt>/dev/sdb</tt>) in the input field.
</p>
");
	return helptext;
    }

    /**
      * Get help
      * @return string help text
      */
    global define string getExpertManualHelp () ``{
	// help text 1/1
	return _("<P><B>Expert manual configuration</B><BR>
Here, manually edit the boot loader configuration.</P>
<P>Note: Final configuration file can have different indenting.</P>
");
    }

    /**
      * Get help
      * @return string help text
      */
    global define string getPasswdHelp () ``{
	// help text 1/1
	return _("<P>
By checking <B>Use password for booting</B> and setting a 
<B>Password</B>, protect the computer from being booted 
by an unauthorized person.
</p>");

    }

}
