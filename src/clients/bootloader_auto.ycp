/**
 * File:
 *      bootloader_auto.ycp
 *
 * Module:
 *      Bootloader installation and configuration
 *
 * Summary:
 *      Bootloader autoinstallation preparation
 *
 * Authors:
 *      Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 *
 */


{

    textdomain "bootloader";
    import "Bootloader";
    import "Wizard";
    import "Installation";
    import "Mode";
    import "Summary";
    include "bootloader/routines/ui.ycp";

    string func = WFM::Args(0);
    map param = WFM::Args(1);

    /**
      * Create a summary
      * return string
      */
    if(func == "Summary") {
	Bootloader::Import(param);
	return (Bootloader::Summary ());
    }
    /**
      * Reset configuration
      * return map or list
      */
    else if (func == "Reset") {
	Bootloader::Propose ();
	return ($[]);
    }
    /**
      * Change configuration
      * return symbol (i.e. `finish || `accept || `next || `cancel || `abort)
      */
    else if (func == "Change") {
	Bootloader::Import(param);
	any res = runWizard ();
	return res;
    }
    /**
      * Return configuration data
      * return map or list
      */
    else if (func == "Result") {
	return(Bootloader::Export());
    }
    /**
      * Write configuration data
      * return boolean
      */
    else if (func == "Write") {
	return(Bootloader::Write());
    }

    /* unknown function */
    else {
	y2error("unknown function: %1", func);
	return false;
    }

}
