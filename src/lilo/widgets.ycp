/**
 * File:
 *      include/bootloader/lilo/widgets.ycp
 *
 * Module:
 *      Bootloader installation and configuration
 *
 * Summary:
 *      Widgets specific for LILO bootloader
 *
 * Authors:
 *      Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 *
 */


{

    textdomain "bootloader";

    /**
      * Get map of dialogs and widgets
      * @return map of dialogs and widgets
      */
    global define map GetWidgets () ``{
        return $[
		"globalsection" : ``(BootLILO::getGlobalSectionWidget ()),
        ];
    }

    /**
      * Get widget
      * @return map of widget
      */
    global define map getGlobalSectionWidget () ``{
        list items = [
            `item (`id (`propose), _("&Propose New Configuration")),
            `item (`id (`scratch), _("&Start from Scratch")),
	];
	if (Mode::normal || Mode::config)
	    items = add (items, `item (`id (`reread),
		_("&Reread Configuration from Disk")));
        map ret = BootCommon::getGlobalSectionWidget ();
        ret["widget"] = (`HBox (`HSpacing (2), `VBox (
                    `Table (`id (`settings), `opt (`immediate, `notify, `keepSorting),
                        `header (_("Ch."), _("Option"), _("Value")), []),
                    `HBox (
                        `PushButton (`id (`add), `opt (`key_F3), AddButtonLabel ()),
                        `PushButton (`id (`edit), `opt (`key_F4), EditButtonLabel ()),
                        `PushButton (`id (`delete), `opt (`key_F5), DeleteButtonLabel ()),
                        `HStretch (),
                        `MenuButton (`id (`restore), _("Res&et"), items)
                    )
                ), `HSpacing (2)));
        term widget = ret["widget"]:nil;
        return ret;
    }


} // end of include
