/*
 * $Id$
 */

Bootloader configuration during installation using y2c_lilo
===========================================================

1. Current state
================

1.1 Bootloader info dialog
===

YaST looks to user_settings-partition table and try
to determine installed operating systems.
The message with detection result and bootloader 
installation target appears.

1.2 Custom bootloader configuration
===

using 'custom bootloader config' only limited number
of parameters can be modified (device to write on, 
linear and activate option, kernel params (common to 
all kernels)).

1.3 Configuration writing
===

In this module the the params for bootloader are
collected and 
[sl]ilo.conf is created by script 'dolilo' 'dosilo'
and eventually initrd is created

2. Next state
=============

2.1 Bootloader info dialog
===

User will see detailed boot-sections list (the dialog may
be similar to 'suggested partitioning') with bootloader 
installation target with choice to 'accept' or 'modify'
config. It will contain info about what OS was detected 
where and what label to use for booting it.

Bootloader parameters will be collected in this point, 
unlike in current version.
Config will be stored in user_settings with key 'liloconf'.
Value of this key will be used in 'inst_writelilo' and
will be passed to lilo_write.
Data structure of liloconf value is described in 
modules/y2c_lilo/src/lilo_write.


2.2 Custom bootloader configuration
===

After choosing the 'modify' way of bootloader installation,
yast2-config-lilo module will be called. User will be able to
modify options of suggested config, add/remode sections.
The 'liloconf' value of user_settings will be modified and
stored for later saving.

2.3 Configuration writing
===

now we can use lilo agent for reading and writing lilo-like
files. scripts 'do[lms]ilo' can be replaced lilo_write function.
this function will be called within the inst_writelilo module.

This module will only call 'lilo_write' and will commit changes
to disk using 'lilo'.
Eventually and initrdt (if needed) will be created.

The problem is that we cannot test modified configuration
before this point (after the system got installed/updated).
In case of failure show popup with choice to install 
suggested liloconf or modify current configuration.

