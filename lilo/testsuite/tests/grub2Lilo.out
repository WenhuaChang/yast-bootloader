Read	.probe.architecture "i386"
Read	.probe.has_apm true
Read	.probe.has_pcmcia false
Read	.probe.has_smp false
Read	.probe.system []
Read	.target.tmpdir "/tmp"
Read	.target.size "/etc/install.inf" 0
Read	.etc.install_inf.Sourcemounted 0
Read	.etc.install_inf.AutoYaST 0
Read	.etc.install_inf.Demo 0
Read	.etc.install_inf.Textmode 0
Read	.etc.install_inf.Manual 0
Read	.etc.install_inf.Console 0
Read	.etc.install_inf.Braille 0
Read	.etc.install_inf.VNC 0
Read	.etc.install_inf.UseSSH 0
Read	.etc.install_inf.Locale "en_EN"
Read	.etc.install_inf.InstMode "cd"
Read	.sysconfig.console.CONSOLE_FONT "lat2-16.psfu"
Read	.sysconfig.console.CONSOLE_SCREENMAP "trivial"
Read	.sysconfig.console.CONSOLE_UNICODEMAP ""
Read	.sysconfig.console.CONSOLE_MAGIC "(K"
Read	.sysconfig.console.CONSOLE_ENCODING "ISO-8859-2"
Execute	.target.bash "/usr/bin/setfont" 0
Read	.probe.floppy.manual []
Read	.probe.cdrom.manual []
Read	.probe.boot_arch "grub"
Read	.probe.disk []
Read	.md.config $[]
Read	.lvm.vg $[]
Read	.lvm.pv $[]
Read	.target.size "/etc/cryptotab" 0
Read	.proc.swaps []
Write	.dumpto.tmp.targetMap_i $[] true
Read	.proc.mounts []
Read	.proc.swaps []
Read	.etc.mtab []
Read	.target.size "/etc/fstab" 0
Read	.target.size "/etc/cryptotab" 0
Execute	.target.bash_output "awk '\n/(hd0)/ {printf $2; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"/dev/hda"]
Return	/dev/hda
Execute	.target.bash_output "awk '\n/(hd0)/ {printf $2; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"/dev/hda"]
Return	/dev/hda1
Execute	.target.bash_output "awk '\n/(hd0)/ {printf $2; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"/dev/hda"]
Return	/dev/hda12
Execute	.target.bash_output "awk '\n/(hd0)/ {printf $2; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"/dev/ida/c0d0"]
Return	/dev/ida/c0d0
Execute	.target.bash_output "awk '\n/(hd0)/ {printf $2; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"/dev/ida/c0d0"]
Return	/dev/ida/c0d0p1
Execute	.target.bash_output "awk '\n/(hd0)/ {printf $2; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"/dev/ida/c0d0"]
Return	/dev/ida/c0d0p12
Execute	.target.bash_output "awk '\n/(fd0)/ {printf $2; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"/dev/fd0"]
Return	/dev/fd0
