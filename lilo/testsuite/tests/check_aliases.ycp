/*
 * Authors:
 *  Unknown <unknown@addres.xx>
 *
 * $Id$
 *
 */


{
    include "testsuite.ycp";
    import "Pkg";

    // minimal "don't care" SCR data to work with the constructor
    map READ = $[
	"target": $[
	    "tmpdir": "/tmp",
	    ],
	"etc" : $[
            "install_inf" : $[
                "Locale" : "en_EN",
                "InstMode" : "cd",
		],
	    ],
	"sysconfig" : $[
            "console" : $[
                "CONSOLE_FONT" : "lat2-16.psfu",
                "CONSOLE_SCREENMAP" : "trivial",
                "CONSOLE_UNICODEMAP" : "",
                "CONSOLE_MAGIC" : "(K",
                "CONSOLE_ENCODING" : "ISO-8859-2",
            ],
        ],
        "probe" : $[
            "disk" : [],
            "boot_arch" : "lilo",
            "architecture" : "i386",
            "has_apm" : true,
            "has_pcmcia" : false,
            "has_smp" : false,
            "system" : [],
            "floppy" : $[
                "manual" : [],
		],
	    "cdrom" : $[
                "manual" : [],
		],
	    ],
	];
    TESTSUITE_INIT ([READ, $[], $[]], 0);

    include "lilo/routines.ycp";

    // this one should make no problem
    map liloconf = $[
	        "image":  [
                        $["label" : "image1"],
                        $["label" : "image2", "alias": "image alias"]
                ],
		"other":  [
                        $["label" : "other1", "alias": "other alias"],
                        $["label" : "other2"]
                ]
    ];

    TEST(``(check_aliases(liloconf, "image1", "new_lab", "new_image")), [], nil);

    // complain for duplicitous sec label
    TEST(``(check_aliases(liloconf, "image1", "image2", "")), [], nil);
    TEST(``(check_aliases(liloconf, "image1", "other2", "")), [], nil);

    // no prob
    TEST(``(check_aliases(liloconf, "image2", "image4", "image alias")), [], nil);

    // prob
    TEST(``(check_aliases(liloconf, "image1", "brekeke", "other alias")), [], nil);
    TEST(``(check_aliases(liloconf, "image1", "brekeke", "image alias")), [], nil);

    // alias/label conflict
    TEST(``(check_aliases(liloconf, "image1", "brekeke", "image2")), [], nil);
    TEST(``(check_aliases(liloconf, "image1", "brekeke", "other2")), [], nil);

    TEST(``(check_aliases(liloconf, "other2", "brekeke", "image2")), [], nil);
    TEST(``(check_aliases(liloconf, "other2", "image alias", "adf")), [], nil);


    // alias conflict
    TEST(``(check_aliases(liloconf, "other2", "brekeke", "image alias")), [], nil);
    TEST(``(check_aliases(liloconf, "image2", "ialias", "other alias")), [], nil);

}
