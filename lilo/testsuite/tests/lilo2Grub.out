Read	.probe.architecture "i386"
Read	.probe.has_apm true
Read	.probe.has_pcmcia false
Read	.probe.has_smp false
Read	.probe.system []
Read	.target.tmpdir "/tmp"
Read	.target.size "/etc/install.inf" 0
Read	.etc.install_inf.Sourcemounted 0
Read	.etc.install_inf.AutoYaST 0
Read	.etc.install_inf.Demo 0
Read	.etc.install_inf.Textmode 0
Read	.etc.install_inf.Manual 0
Read	.etc.install_inf.Console 0
Read	.etc.install_inf.Braille 0
Read	.etc.install_inf.VNC 0
Read	.etc.install_inf.UseSSH 0
Read	.etc.install_inf.Locale "en_EN"
Read	.etc.install_inf.InstMode "cd"
Read	.sysconfig.console.CONSOLE_FONT "lat2-16.psfu"
Read	.sysconfig.console.CONSOLE_SCREENMAP "trivial"
Read	.sysconfig.console.CONSOLE_UNICODEMAP ""
Read	.sysconfig.console.CONSOLE_MAGIC "(K"
Read	.sysconfig.console.CONSOLE_ENCODING "ISO-8859-2"
Execute	.target.bash "/usr/bin/setfont" 0
Read	.probe.floppy.manual []
Read	.probe.cdrom.manual []
Read	.probe.boot_arch "grub"
Read	.target.size "/etc/sysconfig/bootloader" 0
Read	.sysconfig.bootloader.LOADER_TYPE "grub"
Read	.etc.fstab []
Read	.target.string "/etc/grub.conf" "root (hd0,0)\ninstall /grub/stage1 d (hd0) /grub/stage2 0x8000 (hd0,0)/grub/menu.lst\nquit"
Read	.probe.disk []
Read	.probe.boot_arch "grub"
Read	.target.size "/etc/sysconfig/bootloader" 0
Execute	.target.bash_output "awk '\n/\\/dev\\/hda/ {printf $1; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"(hd0)"]
Return	(hd0)
Execute	.target.bash_output "awk '\n/\\/dev\\/hda/ {printf $1; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"(hd0)"]
Return	(hd0,0)
Execute	.target.bash_output "awk '\n/\\/dev\\/hda/ {printf $1; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"(hd0)"]
Return	(hd0,11)
Execute	.target.bash_output "awk '\n/\\/dev\\/ida\\/c0d0/ {printf $1; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"(hd0)"]
Return	(hd0)
Execute	.target.bash_output "awk '\n/\\/dev\\/ida\\/c0d0/ {printf $1; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"(hd0)"]
Return	(hd0,0)
Execute	.target.bash_output "awk '\n/\\/dev\\/ida\\/c0d0/ {printf $1; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"(hd0)"]
Return	(hd0,11)
Execute	.target.bash_output "awk '\n/\\/dev\\/fd0/ {printf $1; next;}\n// {next;}' /boot/grub/device.map" $["stdout":"(fd0)"]
Return	(fd0)
